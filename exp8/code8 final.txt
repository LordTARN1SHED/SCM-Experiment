#define uchar unsigned char
#define uint unsigned int
#define ulong unsigned long

#include  <reg51.h>
#include "delay.h"
#include "main.h"
#include"reg51.h"
#include"stdio.h"

#include "math.h"
#include "stdlib.h"
#include "intrins.h"
#include "string.h"

#define itrtime_us 100            // us
#define refreshtime 2
#define MOTOR_HIGH 0
#define MOTOR_LOW 1
#define HIGH 1
#define LOW 0

sbit BEEP=P1^3;
sbit highCON=P1^4;
sbit sharpCON=P1^5;

// 定义控制引脚
sbit CS = P0^1; // 寄存器选择
sbit SID = P0^0; // 读/写选择
sbit SCLK = P0^3; // 使能信号
sbit RST = P0^2; // 使能信号
sbit RS = P0^1; // 寄存器选择
sbit RW = P0^0; // 读/写选择

sbit LOAD=P1^0;
sbit DIN=P1^1;
sbit DCLK=P1^2;
sbit DOUT=P3^2;
int T0count=0;
int singSong;
int pastPressed=0;
int mode=0;
int pressedKeyValue=0;
int keyoff=1;
int keyValue=0;
int sharp=0;
int high=0;
int songSpeed=100;
int nowNote=0;

//const unsigned char code CsoundH[14]={0xf2,0xf3,0xf5,0xf5,0xf6,0xf7,0xf8,0xf9,0xf9,0xfa,0xfa,0xfb,0xfb,0xfc};
//const unsigned char code CsoundL[14]={0x55,0xd2,0x26,0xc5,0xe4,0xe1,0xc4,0x2e,0xec,0x95,0xe2,0x72,0xf1,0x62};
//const unsigned char code GsoundH[14]={0xf6,0xf7,0xf8,0xf9,0xf9,0xfa,0xfb,0xfb,0xfb,0xfc,0xfc,0xfc,0xfd,0xfd};
//const unsigned char code GsoundL[14]={0xe4,0xe1,0xc4,0x2e,0xec,0x95,0x2d,0x72,0xf1,0x62,0x96,0xf6,0x4b,0x96};
//const unsigned char code BsoundH[14]={0xf8,0xf9,0xfa,0xfa,0xfb,0xfb,0xfc,0xfc,0xfc,0xfd,0xfd,0xfd,0xfd,0xfe};
//const unsigned char code BsoundL[14]={0xc4,0x8f,0x43,0x95,0x2d,0xb4,0x2c,0x62,0xc8,0x22,0x4b,0x96,0xd9,0x16};

const unsigned char code C1soundH[14]={0xf2,0xf3,0xf5,0xf5,0xf6,0xf7,0xf8,0xf9,0xf9,0xfa,0xfa,0xfb,0xfb,0xfc};
const unsigned char code C1soundL[14]={0x42,0xc1,0x17,0xb7,0xd0,0xdb,0xbe,0x21,0xe1,0x8c,0xd8,0x69,0xe9,0x5b};
const unsigned char code C2soundH[14]={0xfc,0xfc,0xfd,0xfd,0xfd,0xfd,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xff};
const unsigned char code C2soundL[14]={0x8f,0xef,0x45,0x6c,0xb4,0xf4,0x2e,0x47,0x78,0xa2,0xb6,0xda,0xfa,0x17};

const unsigned char code highC1soundH[14]={0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xf9,0xfa,0xfa,0xfb,0xfb,0xfc,0xfc};
const unsigned char code highC1soundL[14]={0x0d,0x76,0xb7,0x45,0x58,0x4f,0x21,0x80,0x36,0x8c,0x23,0xaa,0x23,0x5b};
const unsigned char code highC2soundH[14]={0xfc,0xfd,0xfd,0xfd,0xfd,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xff,0xff};
const unsigned char code highC2soundL[14]={0xc0,0x1b,0x45,0x91,0xd5,0x12,0x2e,0x69,0x8e,0xa2,0xc9,0xeb,0x09,0x25};

const char code numcode[18]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x40,0x00};//0-f - null
const unsigned int code pos[8]={0x0800,0x0900,0x0a00,0x0b00,0x0c00,0x0d00,0x0e00,0x0f00};//
const unsigned char code keyCode[16]={0x40,0x41,0x42,0x43,0x48,0x49,0x4a,0x4b,0x50,0x51,0x52,0x53,0x58,0x59,0x5a,0x5b};//4*4button

//below are lcd
int itr_num;
int type;
uchar set_freq;
uchar freq;
sbit LCD_SID=P0^0;            // LCD_SID == WR
sbit LCD_CS=P0^1;            // LCD_CS == RS
sbit LCD_RST=P0^2;
sbit LCD_SCLK=P0^3;            // LCD_SCLK == DE
#define CSHIGH 1
#define RSTHIGH 1
#define threshold1 1000
#define threshold2 2000
uchar char_position[4][8]={ {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87},
                            {0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97},
                            {0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F},
                            {0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F}};

const unsigned char code note[8] = {0x20,0x30,0x28,0x28,0x20,0xE0,0xE0,0xE0};

uchar fanptr = 0;

const uchar code background[8194] = {
64,128,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x80,
0x03,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,
0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,
0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xE0,
0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,
0x0F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,
0x0F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,
0x0F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,
0x07,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,
0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x70,
0x0F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,
0x0F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,
0x0F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,
0x07,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,
0x0F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,
0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,
0x0F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xF0,
0x0F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xF0,
0x07,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xE0,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,
0x00,0x01,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0xFF,0x80,0x00,
0x00,0x00,0x61,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xE1,0x87,0x00,0x00,
0x00,0x00,0x61,0x81,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE1,0x86,0x00,0x00,
0x00,0x00,0xC1,0x87,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE1,0x83,0x00,0x00,
0x00,0x01,0x81,0x87,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,0x81,0x80,0x00,
0x00,0x03,0x07,0x87,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,0xC0,0xC0,0x00,
0x00,0x06,0x0F,0x87,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,0xE0,0x60,0x00,
0x00,0x0C,0x19,0x86,0xC0,0x07,0xBC,0xCC,0x77,0x1F,0x00,0x00,0x61,0xB8,0x30,0x00,
0x00,0x18,0x30,0x86,0xC0,0x07,0xFC,0xCC,0xF7,0x3F,0x80,0x00,0x61,0x1C,0x18,0x00,
0x00,0x70,0x60,0x06,0xC0,0x0F,0xFE,0xCD,0xC0,0x7F,0xC0,0x00,0x60,0x06,0x0E,0x00,
0x00,0xE0,0xC0,0x06,0xC0,0x0C,0xE6,0xCD,0xC7,0x71,0xC0,0x00,0x60,0x03,0x07,0x00,
0x01,0xC1,0x80,0x06,0xC0,0x0C,0xE6,0xCC,0xE7,0x70,0x00,0x00,0x60,0x01,0x81,0x80,
0x03,0x03,0x00,0x06,0xC0,0x0C,0xE6,0xCC,0x77,0x71,0xC0,0x00,0x60,0x00,0xC0,0xC0,
0x06,0x06,0x00,0x06,0xC0,0x0C,0xE6,0xFC,0x77,0x7F,0xC0,0x00,0x60,0x00,0x60,0x60,
0x0C,0x0C,0x00,0x06,0xC0,0x0C,0xE6,0xFD,0xF7,0x3F,0x80,0x00,0x60,0x00,0x30,0x30,
0x18,0x18,0x00,0x06,0xC0,0x0C,0xE6,0x79,0xE7,0x1F,0x00,0x00,0x60,0x00,0x18,0x18,
0x30,0x30,0x00,0x06,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x0E,0x0C,
0x18,0x60,0x00,0x06,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x07,0x18,
0x0C,0xC0,0x00,0x06,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x01,0xB0,
0x07,0x80,0x00,0x06,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0xE0,
0x03,0x00,0x00,0x06,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,
0x00,0x00,0x00,0x07,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

const uchar code background1[15][1282] = {
	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

    {40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x01,0x00,0x03,0xFC,0x01,0x80,0x00,0xC0,0x01,0x40,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x01,0x00,0x00,0xC0,0x01,0x00,0x00,0x80,0x07,0x00,0x00,0x80,0x0F,0x80,
0x09,0x80,0x07,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x01,0x40,0x03,0xFC,0x01,0x40,0x00,0xC0,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x07,0x00,0x00,0xC0,0x07,0x00,0x00,0x80,0x07,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x01,0x00,0x18,0xA3,0x01,0x80,0x08,0x61,0x01,0x40,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x01,0x00,0x03,0xFC,0x01,0x00,0x00,0xC0,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x07,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x01,0x40,0x18,0xA3,0x01,0x40,0x08,0x61,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x07,0x00,0x03,0xFC,0x07,0x00,0x00,0xC0,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x01,0x00,0x10,0x78,0x01,0x80,0x10,0xEC,0x01,0x40,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x01,0x00,0x18,0xA3,0x01,0x00,0x08,0x61,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x07,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x01,0x40,0x10,0x78,0x01,0x40,0x10,0xEC,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x07,0x00,0x18,0xA3,0x07,0x00,0x08,0x61,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x01,0x00,0x00,0x70,0x01,0x80,0x01,0xE0,0x01,0x40,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x01,0x00,0x10,0x78,0x01,0x00,0x10,0xEC,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x07,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x01,0x40,0x00,0x70,0x01,0x40,0x01,0xE0,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x07,0x00,0x10,0x78,0x07,0x00,0x10,0xEC,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x00,0x00,0x00,0x41,0x00,0x00,
0x00,0x41,0x01,0x00,0x00,0x43,0x01,0x80,0x00,0x42,0x01,0x40,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x01,0x00,0x00,0x70,0x01,0x00,0x01,0xE0,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x07,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

	{40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x63,0x01,0x00,0x00,0x41,0x01,0x80,
0x00,0x41,0x01,0x40,0x00,0x43,0x01,0x40,0x00,0x42,0x01,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x07,0x00,0x00,0x70,0x07,0x00,0x01,0xE0,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},

    {40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x00,0x00,0x3E,0x01,0x80,0x00,0x63,0x01,0x40,0x00,0x41,0x01,0x40,
0x00,0x41,0x01,0x00,0x00,0x43,0x01,0x00,0x00,0x42,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x07,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    {40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x80,
0x00,0x00,0x01,0x40,0x00,0x3E,0x01,0x40,0x00,0x63,0x01,0x00,0x00,0x41,0x01,0x00,
0x00,0x41,0x07,0x00,0x00,0x43,0x07,0x00,0x00,0x42,0x07,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    {40,32,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x40,
0x00,0x00,0x01,0x00,0x00,0x3E,0x01,0x00,0x00,0x63,0x07,0x00,0x00,0x41,0x0F,0x80,
0x00,0x41,0x07,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    {40,32,
0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x40,
0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0F,0x80,
0x00,0x00,0x07,0x00,0x00,0x3E,0x07,0x00,0x00,0x63,0x07,0x00,0x00,0x41,0x0F,0x80,
0x00,0x41,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x42,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x5C,0x00,0x00,0x00,0x70,0x00,0x00,0x01,0xE0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x1C,0x20,0x00,0x00,0x10,0x78,0x00,0x00,0x10,0xEC,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x11,0x22,0x00,0x00,0x18,0xA3,0x00,0x00,0x08,0x61,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x06,0x46,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,0xC0,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
0x00,0x40,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00,0x00,
0x09,0x80,0x00,0x00,0x0B,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
};

// delay 10*n us
void delay_10us(uchar n) {
    unsigned char i;
    for (i = n; i > 0; --i) {
        _nop_();
        //_nop_(); //12MHz
    }
}

void LCD_write_byte(unsigned char Data) {
    unsigned char i;
    for (i = 0; i < 8; i++) {
        if (Data & 0x80)
            LCD_SID = 1;
        else
            LCD_SID = 0;

        _nop_();
        _nop_();
        LCD_SCLK = 0;
        _nop_();
        LCD_SCLK = 1;
        Data <<= 1;
    }
}



void LCD_write_byte_split(unsigned char Data) {
    LCD_write_byte(Data & 0xf0);
    LCD_write_byte((Data << 4) & 0xf0);
}

void LCD_write_data(uchar Data) {
    LCD_SCLK = 0;
    LCD_write_byte(0xfa);
    _nop_();
    LCD_write_byte_split(Data);
    delay_10us(10);
}

void LCD_write_command(unsigned char command) {
    LCD_SCLK = 0;
    LCD_write_byte(0xf8);
    _nop_();
    LCD_write_byte_split(command);
    if (command == 0x01)
        delay_ms(10);
    else
        delay_10us(10);
}
void LCD_init(void) {    //初始化
    LCD_CS = LCD_RST = 1;
    LCD_write_command(0x30);    // 基本指令集
    LCD_write_command(0x08);
    LCD_write_command(0x0c);
    LCD_write_command(0x06);
    LCD_write_command(0x01);
}

void LCD_setposition(uchar x,uchar y){
    LCD_write_command(char_position[x][y]);  // DDRAM
}
void LCD_setposition_dot(uchar row,uchar col){
    if(row>=32){
        LCD_write_command(0x80|(row-32));
        LCD_write_command(0x80|(col+8));
    }
    else{
        LCD_write_command(0x80|row);
        LCD_write_command(0x80|col);
    }
}
void LCD_startGraphic(){
    LCD_write_command(0x34);          // 扩展指令开启
    LCD_write_command(0x36);          // 绘图指令开启
}
void LCD_endGraphic(){
    LCD_write_command(0x36);          // 绘图指令关闭
    LCD_write_command(0x30);          // 扩展指令关闭
}

void LCD_showString(uchar x,uchar y,uchar* p){
    uchar* temp = p;
    uchar length = strlen(p);
    uchar i,j;

    // 白底黑字
    LCD_startGraphic();
    for (i = x * 16; i < x * 16 + 16; i++) {
        LCD_setposition_dot(i, y);
        for (j = 0; j < length; j++) {
            LCD_write_data(0x00);
        }
    }
    LCD_endGraphic();

    // 显示
    LCD_setposition(x, y);
    while(*p){
        LCD_write_data(*p);
        p++;
    }
    
}

void LCD_showNum_uchar(uchar x, uchar y, uchar num){
    uchar freq_str[3] = { '0',32,32};
    uchar div=100;
    uchar temp,digit=3;
    uchar i=0,j;
    temp= num;
    
    if (num > 0) {
        while (div && temp < div) {
            div /= 10; digit--;
        }
        do {
            freq_str[i++] = (uchar)(temp / div + '0');
            temp %= div;
            div /= 10;
        } while (div);
    }
    else
        digit = 1;

    // 白底黑字
    LCD_startGraphic();
    for (i = x * 16; i < x * 16 + 16; i++) {
        LCD_setposition_dot(i, y);
        for (j = 0; j < digit; j++) {
            LCD_write_data(0x00);
        }
    }
    LCD_endGraphic();

    // 显示
    LCD_setposition(x, y);
    for(i=0;i<3;i++){
        LCD_write_data(freq_str[i]);
    }
}

void LCD_showGraphic(uchar *graph, uchar start_row, uchar start_col){
    int i,j;
    int pt;
    int width,height;
    height=graph[0];width=graph[1];
    pt=2;
    LCD_startGraphic();
    for(i=0;i<height;i++){
        LCD_setposition_dot(start_row+i,start_col);
        for(j=0;j<width/8;j++){
            LCD_write_data(graph[pt]);
            pt++;
        }
    }
    LCD_endGraphic();
}
void LCD_clear() {
    uchar i,j;
    LCD_startGraphic();
    for (i = 0; i < 32; i++) {
        LCD_setposition_dot(i, 0);
        for (j = 0; j < 16; j++) {
            LCD_write_data(0x00);
        }
    }
    LCD_endGraphic();

}

void test() {
    int i;
    LCD_startGraphic();
    for (i = 0; i < 8; i++) {
        LCD_setposition_dot(i, i);
        LCD_write_data(0xff);
        LCD_write_data(0xff);
        LCD_write_data(0xff);
        LCD_write_data(0xff);
    }
}

void shownote(int n){
	LCD_showGraphic(background1[n], 3, 3);
}

//above are lcd



void CH451do(int command){
	int j=0;
	LOAD=0;
	for(j=0;j<12;j++){
		if(command&0x0001) DIN=1;
		else DIN=0;
		DCLK=0;
		command>>=1;
		DCLK=1;
	}
	LOAD=1;
}

void CH451show(char position,char num,int dot){
	if(dot) CH451do(pos[position]|numcode[num]|0x80);
	else CH451do(pos[position]|numcode[num]);
}

int CH451getKey(){
	int i=0;
	char getKeyTemp=0x00;	
	CH451do(0x0700);//read key
	for(i=0;i<7;i++){
		getKeyTemp<<=1;
		if(DOUT) getKeyTemp|=1;
		else getKeyTemp|=0;
		DCLK=0;
		DCLK=1;
	}
	if(getKeyTemp==0x00) return 16;
	for(i=0;i<16;i++){
		if(getKeyTemp==keyCode[i]){
			return i;
		}
	}
	return 16;
}

void show(){
	int showPressed=pastPressed;
	int show_j=0;
	CH451show(show_j++,showPressed%16,0);
	showPressed/=16;
	CH451show(show_j++,showPressed%16,0);
	showPressed/=16;
	CH451show(show_j++,showPressed%16,0);
	CH451show(show_j++,17,0);
	if(sharpCON){
		CH451show(show_j++,13,0);
		CH451show(show_j++,13,0);
		CH451show(show_j++,10,0);
	}
	else {
		CH451show(show_j++,16,0);
		CH451show(show_j++,16,0);
		CH451show(show_j++,16,0);
	}
	if(highCON) CH451show(show_j++,1,0);
	else CH451show(show_j++,0,0);
}

void sing(int tone,int time){
	keyValue=tone-1;
	shownote(tone);
	if(songSpeed*time>20) delay_ms(songSpeed*3*time-60);
	TR1=0;
	delay_ms(songSpeed*time);
	TR1=1;
}
void nosing(int time){
	TR1=0;
	delay_ms(songSpeed*4*time);
	delay_ms(songSpeed*time);
	TR1=1;
}

void song1(){
	high=1;
	sharp=0;
	songSpeed=33;
	TR1=1;
	sing(12,2);
	sing(10,1);
	sing(11,1);
	sing(12,2);
	sing(10,1);
	sing(11,1);
	sing(12,1);
	sing(5,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);
	sing(9,1);
	sing(10,1);
	sing(11,1);

	sing(10,2);
	sing(8,1);
	sing(9,1);
	sing(10,2);
	sing(3,1);
	sing(4,1);
	sing(5,1);
	sing(6,1);
	sing(5,1);
	sing(4,1);
	sing(5,1);
	sing(8,1);
	sing(7,1);
	sing(8,1);

	sing(6,2);
	sing(8,1);
	sing(7,1);
	sing(6,2);
	sing(5,1);
	sing(4,1);
	sing(5,1);
	sing(4,1);
	sing(3,1);
	sing(4,1);
	sing(5,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);

	sing(6,2);
	sing(8,1);
	sing(7,1);
	sing(8,2);
	sing(7,1);
	sing(6,1);
	sing(7,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);
	sing(9,1);
	sing(10,1);
	sing(11,1);
	sing(12,1);

	//re
	sing(12,2);
	sing(10,1);
	sing(11,1);
	sing(12,2);
	sing(10,1);
	sing(11,1);
	sing(12,1);
	sing(5,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);
	sing(9,1);
	sing(10,1);
	sing(11,1);

	sing(10,2);
	sing(8,1);
	sing(9,1);
	sing(10,2);
	sing(3,1);
	sing(4,1);
	sing(5,1);
	sing(6,1);
	sing(5,1);
	sing(4,1);
	sing(5,1);
	sing(8,1);
	sing(7,1);
	sing(8,1);

	sing(6,2);
	sing(8,1);
	sing(7,1);
	sing(6,2);
	sing(5,1);
	sing(4,1);
	sing(5,1);
	sing(4,1);
	sing(3,1);
	sing(4,1);
	sing(5,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);

	sing(6,2);
	sing(8,1);
	sing(7,1);
	sing(8,2);
	sing(7,1);
	sing(6,1);
	sing(7,1);
	sing(6,1);
	sing(7,1);
	sing(8,1);
	sing(9,1);
	sing(8,1);
	sing(7,2);
	sing(8,4);
	TR1=0;
}

void song2(){
	high=1;
	sharp=0;
	songSpeed=30;
	TR1=1;
	sharp=1;
	sing(5,2);
	sing(5,2);
	sing(5,2);
	sharp=0;
	sing(6,1);
	sing(7,1);
	nosing(2);
	sing(3,2);
	sing(10,2);
	sing(7,2);

	sing(9,2);
	sing(8,2);
	sing(8,2);
	sing(7,1);
	sing(8,1);
	nosing(2);
	sing(8,2);
	sing(8,2);
	sing(8,2);

	sing(9,2);
	sing(5,2);
	sing(9,2);
	sing(5,1);
	sing(9,1);
	nosing(2);
	sing(9,2);
	sing(9,2);
	sing(11,2);

	sing(11,2);
	sing(10,2);
	sing(10,2);
	sharp=1;
	sing(9,1);
	sharp=0;
	sing(10,1);
	nosing(2);
	sing(10,2);
	sing(10,2);
	sing(10,2);

	sing(9,2);
	sing(9,2);
	sing(9,2);
	sing(10,1);
	sing(11,1);
	nosing(2);
	sing(11,2);
	sing(11,2);
	sing(12,2);

	sing(8,2);
	sing(8,2);
	sing(8,1);
	sing(9,2);
	sing(10,5);
	nosing(2);
	sing(10,2);
	
	sing(9,4);
	nosing(6);
	sing(9,2);
	sharp=1;
	sing(5,2);
	sharp=0;
	sing(6,2);
	TR1=0;
}

void main(void)
{
	int temperature=321;
	EA=1;
	ET0=1;
	ET1=1;
	PT1=1;
	PT0=0;
	TMOD=0x11;
	TH0=0x04c;//FC18 1MS
	TL0=0x0f7;//B1E0 20MS D8F0  10MS EC78 5MS 3CB0 50MS
	TH1=0x04c;//
	TL1=0x0f7;//4cf7 50ms
	//TR0=1;
	//TR1=1;

	DIN=0;
	DIN=1;
	CH451do(0x0201);//reset
	CH451do(0x0403);//screen and keyboard
	
	LCD_init(); // 初始化 LCD
	LCD_clear();
	LCD_showGraphic(background, 0, 0);
	TR0=1;

 	while(1){
		show();
		keyValue=CH451getKey();
		if(keyValue==16) {
			keyoff=1;
			BEEP=0;
			TR1=0;
		}
		else if(keyoff!=0){
			keyoff=0;
			if(keyValue==14){
				singSong=1;
			}
			else if(keyValue==15){
				singSong=2;
			}
			else{
				pastPressed=(pastPressed%256)*16+keyValue+1;
				nowNote=keyValue%14+1;
				T0count=19;
				high=highCON;
				sharp=sharpCON;
				TR1=1;
			}
		}
	}
}
void TIMEOUT0() interrupt 1{
	TH0=0x00;
	TL0=0x00;
	T0count++;
	if(singSong==1){song1();singSong=0;}
	else if(singSong==2){song2();singSong=0;}
	if(T0count==20){T0count=0;shownote(nowNote);}
}
void TIMEOUT1() interrupt 3 using 2{
	int num=keyValue%14;
	if(high){
		if(sharp){TH1=highC2soundH[num];TL1=highC2soundL[num];}
		else{TH1=C2soundH[num];TL1=C2soundL[num];}
	}
	else{
		if(sharp){TH1=highC1soundH[num];TL1=highC1soundL[num];}
		else{TH1=C1soundH[num];TL1=C1soundL[num];}
	}
	BEEP=~BEEP;
}
